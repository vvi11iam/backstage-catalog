apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: vcluster
  title: New Virtual Cluster
  description: Get a new virtual cluster
spec:
  owner: user:guest
  type: service

  parameters:
    - title: Choose a Repo location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location for ArgoCD to Deploy
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
    - title: Basic vCluster Configuration
      required:
        - clusterName
        # - k8sHostClusterURLforArgo
        - hostClusterType
      properties:
        clusterName:
          title: Cluster Name
          type: string
          description: The name of your virtual cluster
          ui:autofocus: true
        # k8sHostClusterURLforArgo:
        #   title: The host cluster to use
        #   type: string
        #   description: The host cluster to use
        #   enum:
        #     - https://5D795F1CE2F22C3B3BB93E19AA666DF4.gr7.us-east-1.eks.amazonaws.com
        #     - https://34.139.219.170
        hostClusterType:
          title: The host cluster type
          type: string
          description: The host cluster type to use
          enum:
            - eks
            - gke
            - aks

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          clusterName: ${{ parameters.clusterName }}
          k8sHostClusterURLforArgo: ${{ parameters.k8sHostClusterURLforArgo }}
    # This step publishes the contents of the working directory to GitHub.
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.clusterName }}
        repoUrl: ${{ parameters.repoUrl }}
    # Start a GitHub Action to build an EKS cluster with Terraform
    - id: github-action
      name: Trigger GitHub Action
      action: github:actions:dispatch
      input:
        workflowId: vcluster_deploy.yaml
        repoUrl: 'github.com?repo=vcluster-demos&owner=tekanaid'
        branchOrTagName: 'master'
        workflowInputs:
          clusterName: ${{ parameters.clusterName }}
          # k8sHostClusterURLforArgo: ${{ parameters.k8sHostClusterURLforArgo | string}}
          repoURLforArgo: ${{ steps['publish'].output.remoteUrl }}
          hostEKSClusterName: eks-host-cluster
          hostEKS_URLforArgo: https://5D795F1CE2F22C3B3BB93E19AA666DF4.gr7.us-east-1.eks.amazonaws.com
          # hostGKEClusterName: gke-host-cluster
          hostGKEClusterName: samgke
          hostGKEprojectName: crossplaneprojects
          hostGKE_URLforArgo: https://34.23.68.174
          hostAKSClusterName: aks-host-cluster
          hostAKS_URLforArgo: https://
          hostClusterType: ${{ parameters.hostClusterType | string}}
    # The final step is to register our new component in the catalog.
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
        
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}